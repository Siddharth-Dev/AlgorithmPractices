package crackingTheCodingInterview.chapter9;

import java.util.HashSet;
import java.util.Set;

/**
 * ?????????JAVA????????????(2)-??????Set?????????HashSet???<br>
 * Set?????????????????????????????????????????????????????????????????????<br>
 * JDK5??????????????????????????????autobox ??????Set?????????
 * 
 * @author ????????? JAVA?????????(java2000.net)
 * 
 */

public class HashSetPractices {
	public static void main(String[] args) {
		// ????????????
		testNormal();
		// ??????HashSet????????????
		testForHashSet();
		testForHashSet2();
	}

	/**
	 * ?????????????????????????????????.
	 */
	public static void testNormal() {
		System.out.println("----- testNormal -----------");
		// Set?????????????????????????????????????????????HashSet
		Set set = new HashSet();
		// ?????????????????????
		set.add("?????????");
		// ????????????????????????
		set.add(new Integer(1));
		// ??????JDK5?????????????????????????????????
		set.add(123.45);
		// ????????????????????????????????????
		System.out.println(set.size());
		// ??????????????????????????????????????????
		set.add("?????????");
		// ??????????????????????????????????????????
		System.out.println(set.size());
		// ?????????????????????????????????????????????????????????
		System.out.println(set.contains(123.45));
		// ???????????????????????????????????????
		set.remove(123.45);
		// ??????????????????????????????????????????
		System.out.println(set.size());
	}

	/**
	 * ????????????HashSet????????????
	 */
	public static void testForHashSet() {
		System.out.println("----- testForHashSet -----------");
		HashSet<MyObject> set = new HashSet<MyObject>();
		// ????????????null??????
		set.add(null);
		// ??????????????????????????????????????????
		System.out.println(set.size());
		// ??????????????????null??????
		set.add(null);
		// ??????????????????????????????????????????
		System.out.println(set.size());
		MyObject obj = new MyObject("java2000", 2);
		set.add(obj);
		obj = new MyObject("csdn", 10);
		set.add(obj);
		// ??????????????????????????????????????????
		System.out.println(set.size());
		// ??????????????????????????????
		System.out.println(set.contains(obj));
		obj = new MyObject("java2000_net", 2);
		set.add(obj);
		// ??????????????????????????????????????????
		System.out.println(set.size());
		// ???????????????obj????????????set??????
		// ????????????????????????????????????
		set.add(obj);
		System.out.println(set.size());
		// ?????????????????????????????????????????????????????????
		obj = new MyObject("java2000_net", 2);
		set.add(obj);
		System.out.println(set.size());
		// ??????????????????obj???????????????????????????
		obj.setAge(3);
		// ?????????????????????????????????????????????
		// ????????????????????????obj????????????obj??????????????????
		// ??????????????????????????????????????????
		System.out.println(set.contains(obj));
		// ???????????????obj????????????set??????
		// ????????????????????????
		set.add(obj);
		System.out.println(set.size());
	}

	/**
	 * ????????????HashSet?????????2???
	 */
	public static void testForHashSet2() {
		System.out.println("----- testForHashSet2 -----------");
		HashSet<MyObject2> set = new HashSet<MyObject2>();
		MyObject2 obj = null;
		for (int i = 0; i < 3; i++) {
			obj = new MyObject2("java2000" + i, i);
			set.add(obj);
			System.out.println(set.size());
		}
	}
}

class MyObject {
	private int age;
	private String name;

	public int getAge() {
		return age;
	}

	public void setAge(int age) {
		this.age = age;
	}

	public String getName() {
		return name;
	}

	public void setName(String name) {
		this.name = name;
	}

	MyObject(String name, int age) {
		this.name = name;
		this.age = age;
	}

	public boolean equals(Object obj) {
		System.out.println("equals");
		if (obj == null || !(obj instanceof MyObject)) {
			return false;
		}
		MyObject o = (MyObject) obj;
		return this.age == o.age && this.name.equals(o.name);
	}

	public int hashCode() {
		int hashCode = name.hashCode() + String.valueOf(age).hashCode();
		return hashCode;
	}
}

class MyObject2 {
	private int age;
	private String name;

	public int getAge() {
		return age;
	}

	public void setAge(int age) {
		this.age = age;
	}

	public String getName() {
		return name;
	}

	public void setName(String name) {
		this.name = name;
	}

	MyObject2(String name, int age) {
		this.name = name;
		this.age = age;
	}

	public boolean equals(Object obj) {
		System.out.println("equals");
		if (obj == null || !(obj instanceof MyObject2)) {
			return false;
		}
		MyObject2 o = (MyObject2) obj;
		return this.age == o.age && this.name.equals(o.name);
	}

	public int hashCode() {
		return 1;
	}
}

class MyObject3 {
	private int age;
	private String name;
	// ??????????????????????????????
	// ???????????????hashCode,???????????????
	private int HASHCODE = Integer.MIN_VALUE;

	public int hashCode() {
		if (HASHCODE == Integer.MIN_VALUE) {
			// ?????????????????????hashCode
			HASHCODE = name.hashCode() + String.valueOf(age).hashCode();
		}
		return HASHCODE;
	}
}